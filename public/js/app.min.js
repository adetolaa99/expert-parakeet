async function initAnalytics(){try{const t=await fetch("/api/config"),n=await t.json();if(!n.userApi)return;await fetch(`${n.userApi}/visitor/track`,{method:"POST",headers:{"Content-Type":"application/json","Screen-Resolution":`${window.screen.width}x${window.screen.height}`,Timezone:Intl.DateTimeFormat().resolvedOptions().timeZone}})}catch(t){}}window.addEventListener("load",initAnalytics);const player=document.getElementById("player"),statusText=document.getElementById("status-text");async function fetchNowPlaying(){try{const t=await fetch("/api/now-playing"),n=await t.json();if(n.title){const t=n.isPlaying?n.progress/n.duration*100:0;statusText.textContent=n.isPlaying?"":"last seen listening to",player.innerHTML=`\n    <div class="track">\n      <img src="${n.albumArt}" alt="${n.album}" class="album-art" style="${n.isPlaying?"":"opacity: 0.7;"}">\n      <div class="track-info">\n        <div class="track-title" style="${n.isPlaying?"":"color: #999;"}">${n.title}</div>\n        <div class="track-artist" style="${n.isPlaying?"":"color: #777;"}">${n.artist}</div>\n        ${n.isPlaying?`\n          <div class="progress-bar">\n            <div class="progress-fill" style="width: ${t}%"></div>\n          </div>\n        `:""}\n      </div>\n    </div>\n  `}else statusText.textContent="",player.innerHTML='\n        <div class="not-playing">\n          <svg fill="currentColor" viewBox="0 0 24 24">\n            <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z"/>\n          </svg>\n          <div>not listening right now ☹️</div>\n        </div>\n      '}catch(t){console.error("Error:",t)}}fetchNowPlaying(),setInterval(fetchNowPlaying,5e3);